Description: Bridge Exporter Application
AWSTemplateFormatVersion: 2010-09-09
Parameters:
  AttachmentsBucket:
    Type: String
  AwsDefaultVpcId:
    Description: The AWS account's default VPC id
    Type: "AWS::EC2::VPC::Id"
  AwsSnsNotificationEndpoint:
    Type: String
    Description: Email address for AWS SNS notifications
    Default: bridge-exporter-develop@sagebase.org
  BridgeEnv:
    Type: String
    Default: dev
  BridgeUser:
    Type: String
    Default: heroku
  BridgeWorkerEmail:
    Type: String
    Default: bridgeit+exporter@sagebase.org
  BridgeWorkerPassword:
    Type: String
    NoEcho: true
  BridgeWorkerStudy:
    Type: String
    Default: api
  EC2InstanceType:
    Type: String
    Description: Instance type to use for Elastic Beanstalk Instances
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - cr1.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - cc1.4xlarge
      - cc2.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - cg1.4xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - f1.2xlarge
      - f1.16xlarge
  Env:
    Type: String
    Default: develop
  ExporterSqsQueueUrl:
    Type: String
  NewRelicAppName:
    Type: String
  NewRelicLicenseKey:
    Type: String
    NoEcho: true
  RecordIdsBucket:
    Type: String
  S3NotificationSqsQueueUrl:
    Type: String
  SynapseApiKey:
    Type: String
    NoEcho: true
  SynapseGetColumnModelsRateLimitPerMinute:
    Type: String
    Default: '6'
  SynapsePrincipalId:
    Type: String
    Default: '3330889'
  SynapseStorageLocationId:
    Type: String
  SynapseUser:
    Type: String
    Default: BridgeExporterDev
  ThreadPoolWorkerCount:
    Type: String
    Default: '4'
Resources:
  AWSEBConfigurationTemplate:
    Type: 'AWS::ElasticBeanstalk::ConfigurationTemplate'
    Properties:
      ApplicationName: !Ref AWSEBApplication
      SolutionStackName: '64bit Amazon Linux 2018.03 v3.4.2 running Tomcat 8.5 Java 8'
      OptionSettings:
        # EB environment options
        - Namespace: 'aws:elasticbeanstalk:xray'
          OptionName: XRayEnabled
          Value: 'false'
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: IamInstanceProfile
          Value: !Ref AWSIAMInstanceProfile
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: InstanceType
          Value: !Ref EC2InstanceType
        - Namespace: 'aws:autoscaling:launchconfiguration'
          OptionName: SecurityGroups
          Value: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - AWSEC2SecurityGroup
        - Namespace: 'aws:elasticbeanstalk:command'
          OptionName: DeploymentPolicy
          Value: 'AllAtOnce'
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: EnvironmentType
          Value: 'SingleInstance'
        - Namespace: 'aws:elasticbeanstalk:environment'
          OptionName: ServiceRole
          Value: !Ref 'AWSIAMServiceRole'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: StreamLogs
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: DeleteOnTerminate
          Value: 'true'
        - Namespace: 'aws:elasticbeanstalk:cloudwatch:logs'
          OptionName: RetentionInDays
          Value: '90'
        - Namespace: 'aws:elasticbeanstalk:sqsd'
          OptionName: HttpConnections
          Value: '10'
        - Namespace: 'aws:elasticbeanstalk:sqsd'
          OptionName: ErrorVisibilityTimeout
          Value: '2'
        - Namespace: 'aws:elasticbeanstalk:hostmanager'
          OptionName: LogPublicationControl
          Value: 'true'
        # Application environment options
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: ENV
          Value: !Ref Env
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - '.attachment.bucket'
          Value: !Ref AttachmentsBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: bridge.env
          Value: !Ref BridgeEnv
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: bridge.user
          Value: !Ref BridgeUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: bridge.worker.email
          Value: !Ref BridgeWorkerEmail
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: bridge.worker.password
          Value: !Ref BridgeWorkerPassword
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: bridge.worker.study
          Value: !Ref BridgeWorkerStudy
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - '.exporter.request.sqs.queue.url'
          Value: !Ref ExporterSqsQueueUrl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: NEW_RELIC_APP_NAME
          Value: !Ref 'NewRelicAppName'
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: NEW_RELIC_LICENSE_KEY
          Value: !Ref NewRelicLicenseKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - '.record.id.override.bucket'
          Value: !Ref RecordIdsBucket
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - '.s3.notification.sqs.queue.url'
          Value: !Ref S3NotificationSqsQueueUrl
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: synapse.api.key
          Value: !Ref SynapseApiKey
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: synapse.get.column.models.rate.limit.per.minute
          Value: !Ref SynapseGetColumnModelsRateLimitPerMinute
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: synapse.principal.id
          Value: !Ref SynapsePrincipalId
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: !Join
            - ''
            - - !Ref BridgeEnv
              - '.synapse.storage.location.id'
          Value: !Ref SynapseStorageLocationId
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: synapse.user
          Value: !Ref SynapseUser
        - Namespace: 'aws:elasticbeanstalk:application:environment'
          OptionName: threadpool.worker.count
          Value: !Ref ThreadPoolWorkerCount
  AWSEBApplication:
    Type: 'AWS::ElasticBeanstalk::Application'
    Properties:
      ApplicationName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - application
      ResourceLifecycleConfig:
        ServiceRole: !GetAtt AWSIAMServiceRole.Arn
        VersionLifecycleConfig:
          MaxAgeRule:
            DeleteSourceFromS3: true
            Enabled: true
            MaxAgeInDays: 90
  AWSEBEnvironment:
    Type: 'AWS::ElasticBeanstalk::Environment'
    Properties:
      ApplicationName: !Ref AWSEBApplication
      TemplateName: !Ref AWSEBConfigurationTemplate
      EnvironmentName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
      Tier:
        Name: Worker
        Type: SQS/HTTP
  AWSS3AppDeployBucket:
    Type: 'AWS::S3::Bucket'
  AWSIAMDynamoManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: DynamoGetBridgeData
              Action:
                - 'dynamodb:GetItem'
                - 'dynamodb:Query'
              Effect: Allow
              Resource:
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-HealthDataRecord3'
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-HealthDataRecord3/index/uploadDate-index'
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-HealthDataRecord3/index/study-uploadedOn-index'
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-ParticipantOptions'
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-Study'
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-UploadSchema'
            - Sid: DynamoGetPutExportTime
              Action:
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
              Effect: Allow
              Resource:
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-ExportTime'
            - Sid: DynamoManageSynapseTables
              Action:
                - 'dynamodb:GetItem'
                - 'dynamodb:PutItem'
              Effect: Allow
              Resource:
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-exporter-SynapseMetaTables'
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-exporter-SynapseTables'
            - Sid: DynamoPutAttachments
              Action:
                - 'dynamodb:PutItem'
              Effect: Allow
              Resource:
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-HealthDataAttachment'
            - Sid: DynamoScanStudyTable
              Action:
                - 'dynamodb:Scan'
              Effect: Allow
              Resource:
                - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${BridgeEnv}-${BridgeUser}-Study'
  AWSIAMS3ManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:s3:::${RecordIdsBucket}/*'
              - !Sub 'arn:aws:s3:::${AttachmentsBucket}/*'
  # cloudwatch integration https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/AWSHowTo.cloudwatchlogs.html
  AWSIAMCloudwatchIntegrationManagedPolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action:
              - 'logs:CreateLogGroup'
              - 'logs:CreateLogStream'
              - 'logs:GetLogEvents'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
              - 'logs:PutRetentionPolicy'
            Effect: Allow
            Resource:
              - !Sub 'arn:aws:logs:${AWS::Region}:*:*'
  AWSIAMServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - elasticbeanstalk.amazonaws.com
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                sts:ExternalId: elasticbeanstalk
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth'
        - 'arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkService'
  AWSIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier'
        - !Ref AWSIAMDynamoManagedPolicy
        - !Ref AWSIAMS3ManagedPolicy
        - !Ref AWSIAMCloudwatchIntegrationManagedPolicy
  AWSIAMInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: /
      Roles:
        - !Ref AWSIAMRole
  AWSSNSTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
        -
          Endpoint: !Ref AwsSnsNotificationEndpoint
          Protocol: "email"
  # App Service User
  AWSIAMBridgeExporterServiceUserAccessKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref AWSIAMBridgeExporterServiceUser
  AWSIAMBridgeExporterServiceUser:
    Type: 'AWS::IAM::User'
    Properties:
      Groups:
        - !Ref AWSIAMBridgeExporterServiceUserGroup
  AWSIAMBridgeExporterServiceUserGroup:
    Type: 'AWS::IAM::Group'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier'
        - !Ref AWSIAMDynamoManagedPolicy
        - !Ref AWSIAMS3ManagedPolicy
  AWSLBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Load Balancer Security Group
      VpcId: !Ref AwsDefaultVpcId
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
          IpProtocol: tcp
  AWSEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - AWSEC2SecurityGroup
      GroupDescription: EC2 Security Group
      VpcId: !Ref AwsDefaultVpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref AWSLBSecurityGroup
  # KMS Keys
  AWSKmsKey:
    Type: "AWS::KMS::Key"
    Properties:
      Description: !Join
        - '-'
        - - !Ref AWS::StackName
          - "KmsKey"
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          -
            Sid: "Allow administration of the key"
            Effect: "Allow"
            Principal:
              AWS:
                - !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref AWS::AccountId
                    - ':root'
                - !ImportValue us-east-1-bootstrap-CfServiceRoleArn
            Action:
              - "kms:Create*"
              - "kms:Describe*"
              - "kms:Enable*"
              - "kms:List*"
              - "kms:Put*"
              - "kms:Update*"
              - "kms:Revoke*"
              - "kms:Disable*"
              - "kms:Get*"
              - "kms:Delete*"
              - "kms:ScheduleKeyDeletion"
              - "kms:CancelKeyDeletion"
            Resource: "*"
          -
            Sid: "Allow use of the key"
            Effect: "Allow"
            Principal:
              AWS:
                - !Join
                  - ''
                  - - 'arn:aws:iam::'
                    - !Ref AWS::AccountId
                    - ':root'
                - !ImportValue us-east-1-bootstrap-CfServiceRoleArn
                - !GetAtt AWSIAMBridgeExporterServiceUser.Arn
            Action:
              - "kms:Encrypt"
              - "kms:Decrypt"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:DescribeKey"
            Resource: "*"
  AWSKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Join
        - ''
        - - 'alias/'
          - !Ref AWS::StackName
          - '/KmsKey'
      TargetKeyId: !Ref AWSKmsKey
  # Logs and cloudwatch
  AWSLogsTomcatLogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/tomcat8/catalina.out
      RetentionInDays: 90
  AWSCWUploadAutocompleteErrorMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsTomcatLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/tomcat8/catalina.out
      FilterPattern: 'ERROR S3EventNotificationCallback'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Errors"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - UploadAutocompleteErrorCount
  AWSCWUploadAutocompleteErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - UploadAutocompleteErrorCount
      Namespace: LogMetrics/Errors
      Period: 3600
      Statistic: Sum
      Threshold: 10
      TreatMissingData: notBreaching
  AWSCWRequestErrorMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsTomcatLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/tomcat8/catalina.out
      FilterPattern: 'ERROR
                      - FileChunkUploadWorker
                      - S3EventNotificationCallback
                      - nwu-mobile-toolbox-dev
                      - psu-m2c2'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Errors"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - RequestErrorCount
  AWSCWRequestErrorAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - RequestErrorCount
      Namespace: LogMetrics/Errors
      Period: 3600
      Statistic: Sum
      Threshold: 10
      TreatMissingData: notBreaching
  AWSCWRequestWarningMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsTomcatLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/tomcat8/catalina.out
      FilterPattern: 'WARN - WarningHeaderInterceptor'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Warnings"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - RequestWarningCount
  AWSCWRequestWarningAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - RequestWarningCount
      Namespace: LogMetrics/Warnings
      Period: 3600
      Statistic: Sum
      Threshold: 100
      TreatMissingData: notBreaching
  AWSCWHeartbeatMetricFilter:
    Type: "AWS::Logs::MetricFilter"
    DependsOn: AWSLogsTomcatLogGroup
    Properties:
      LogGroupName: !Join
        - '/'
        - - /aws/elasticbeanstalk
          - !Ref 'AWS::StackName'
          - var/log/tomcat8/catalina.out
      FilterPattern: 'org.sagebionetworks.bridge.heartbeat.HeartbeatLogger'
      MetricTransformations:
        -
          MetricValue: "1"
          MetricNamespace: "LogMetrics/Health"
          MetricName: !Join
            - '-'
            - - !Ref 'AWS::StackName'
              - HeartbeatCount
  AWSCWHealthCheckAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref AWSSNSTopic
      ComparisonOperator: LessThanOrEqualToThreshold
      Threshold: 0
      EvaluationPeriods: 1
      MetricName: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - HeartbeatCount
      Namespace: LogMetrics/Health
      Period: 3600
      Statistic: SampleCount
      TreatMissingData: breaching
Outputs:
  AWSSNSTopic:
    Value: !Ref AWSSNSTopic
    Export:
      Name: !Sub '${AWS::StackName}-SnsTopic'
  AWSS3AppDeployBucket:
    Value: !Ref AWSS3AppDeployBucket
    Export:
      Name: !Sub '${AWS::StackName}-AppDeployBucket'
  RecordIdsBucket:
    Value: !Ref RecordIdsBucket
    Export:
      Name: !Sub '${AWS::StackName}-RecordIdsBucket'
  AWSKmsKey:
    Value: !Ref AWSKmsKey
    Export:
      Name: !Sub '${AWS::StackName}-KmsKey'
  AWSKmsKeyAlias:
    Value: !Ref AWSKmsKeyAlias
    Export:
      Name: !Sub '${AWS::StackName}-KmsKeyAlias'
